{
    "name": "Xilinx DSPLIB fir decimate_hb",
    "description": "",
    "gui": false,
    "flow": "versal",
    "platform_allowlist": [
        "vck190",
        "vek280"
    ],
    "platform_properties": {
        "vck190": {
            "param_set": ["test_0_tool_canary_aie",
                          "test_1_fir_15t_sym_hb_2d",
                          "test_2_fir_23t_sym_hb_2d",
                          "test_3_fir_27t_sym_hb_2d",
                          "test_4_fir_55t_sym_hb_2d",
                          "test_5_fir_11t_stream",
                          "test_6_fir_1023t",
                          "test_7_fir_15t_sym_hb_2d_reload",
                          "test_8_fir_63t_ssr2",
                          "test_9_fir_63t_ssr3_casc3",
                          "test_10_fir_43t_int16_int32",
                          "test_15_fir_83t_cint16_int32",
                          "test_16_fir_31t_cint16_cint32",
                          "test_17_fir_16t_float",
                          "test_18_fir_16t_cfloat"
                        ],
            "v++": {
                "compiler": {
                    "clflags": []
                },
                "linker": {
                    "ldclflags": [
                        "--config PROJECT/system.cfg"
                    ]
                }
            },
            "aiecompiler": {
                "compiler": {
                    "customized_params": {
                        "default": {
                            "UUT_TARGET_COMPILE_ARGS": "--aie.Xrouter=DMAFIFOsInFreeBankOnly --aie.stacksize=$(shell $(VITIS_PYTHON3) $(XFLIB_DIR)/L2/tests/aie/common/scripts/paramset.py multi_params.json $(PARAMS))  --aie.Xchess=llvm.xargs=\"-std=c++2a\" --aie.Xchess=main:backend.mist2.xargs=\"+NOdra\" --aie.Xchess=main:backend.mist2.pnll=\"off\" "
                        }
                    }
                }
            }
        },
        "vek280": {
            "param_set": ["test_0_tool_canary_aieml",
                          "test_1_fir_15t_sym_hb_2d_aieml",
                          "test_2_fir_23t_sym_hb_2d_aieml",
                          "test_3_fir_27t_sym_hb_2d_aieml",
                          "test_4_fir_55t_sym_hb_2d_aieml",
                          "test_5_fir_11t_stream_aieml",
                          "test_6_fir_1023t_aieml",
                          "test_7_fir_15t_sym_hb_2d_reload_aieml",
                          "test_8_fir_63t_ssr2_aieml",
                          "test_9_fir_63t_ssr3_casc3_aieml",
                          "test_10_fir_43t_int16_int16_aieml",
                          "test_15_fir_83t_cint16_int16_aieml",
                          "test_16_fir_31t_cint16_cint16_aieml",
                          "test_17_fir_31t_cint32_cint16_aieml",
                          "test_18_fir_47t_int16_int32_aieml"
                        ],
            "v++": {
                "compiler": {
                    "clflags": []
                },
                "linker": {
                    "ldclflags": [
                        "--config PROJECT/system.cfg"
                    ]
                }
            },
            "aiecompiler": {
                "compiler": {
                    "customized_params": {
                        "default": {
                            "UUT_TARGET_COMPILE_ARGS": "--aie.stacksize=$(shell $(VITIS_PYTHON3) $(XFLIB_DIR)/L2/tests/aie/common/scripts/paramset.py multi_params.json $(PARAMS))  --aie.Xchess=llvm.xargs=\"-std=c++2a\" --aie.Xchess=main:backend.mist2.xargs=\"+NOdra\" --aie.Xchess=main:backend.mist2.pnll=\"off\" "
                        }
                    }
                }
            }
        }
    },
    "pre_build": [
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"tclsh LIB_DIR/L2/tests/aie/common/scripts/get_common_config_json.tcl ./config.json ./ $(UUT_KERNEL)\"  --connector \" \" --var \"DATA_TYPE:COEFF_TYPE:FIR_LEN:SHIFT:ROUND_MODE:INPUT_WINDOW_VSIZE:CASC_LEN:USE_COEFF_RELOAD:NUM_OUTPUTS:PORT_API:DUAL_IP:UUT_SSR:UUT_PARA_DECI_POLY:AIE_VARIANT:SAT_MODE\")"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), vitis --classic -exec ipmetadata_config_checker LIB_DIR/L2/meta/$(UUT_KERNEL).json ./config.json -newflow)"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f LIB_DIR/L2/tests/aie/common/scripts/fir_helper.mk gen_input HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR INPUT_FILE=$(LOC_INPUT_FILE)\")"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f LIB_DIR/L2/tests/aie/common/scripts/fir_helper.mk ssr_split HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR SPLIT_ZIP_FILE=$(LOC_INPUT_FILE) TAG=$(TAG)\")"
        },
        {
            "build_cmd": "$(if $(filter REF,$(TAG)), cp $(LOC_INPUT_FILE)  $(REF_INPUT_FILE))"
        },
        {
            "build_cmd": "$(if $(filter REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f LIB_DIR/L2/tests/aie/common/scripts/fir_helper.mk ssr_split HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR SPLIT_ZIP_FILE=$(REF_INPUT_FILE) TAG=$(TAG)\")"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), make run TARGET=x86sim TAG=REF)"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), make cleanall)"
        }
    ],
    "post_launch": [
        {
            "target": "aiesim",
            "launch_cmd": [
                "mkdir -p logs",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f LIB_DIR/L2/tests/aie/common/scripts/fir_helper.mk ssr_zip HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR SPLIT_ZIP_FILE=$(LOC_OUTPUT_FILE_HW) TAG=$(TAG)\"",
                "grep -ve '[XT]' ./aiesimulator_output/data/uut_output.txt > ./logs/uut_output.txt",
                "tclsh LIB_DIR/L2/tests/aie/common/scripts/diff.tcl ./logs/uut_output.txt ./logs/ref_output.txt ./logs/diff.txt $(DIFF_TOLERANCE) $(CC_TOLERANCE)",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f LIB_DIR/L2/tests/aie/common/scripts/fir_helper.mk get_status HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL)\"",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f LIB_DIR/L2/tests/aie/common/scripts/fir_helper.mk get_latency HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL)\"",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f LIB_DIR/L2/tests/aie/common/scripts/fir_helper.mk get_stats HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL)\"",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f LIB_DIR/L2/tests/aie/common/scripts/fir_helper.mk get_theoretical_min HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL) SYMMETRY_FACTOR=$(SYMMETRY_FACTOR)\"",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f LIB_DIR/L2/tests/aie/common/scripts/fir_helper.mk harvest_mem HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL)\"",
                "tclsh LIB_DIR/L2/tests/aie/common/scripts/diff_exit.tcl ./"
            ]
        },
        {
            "target": "x86sim",
            "launch_cmd": [
                "mkdir -p logs",
                "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f LIB_DIR/L2/tests/aie/common/scripts/fir_helper.mk ssr_zip HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR SPLIT_ZIP_FILE=$(LOC_OUTPUT_FILE_X86) TAG=$(TAG)\")",
                "$(if $(filter REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f LIB_DIR/L2/tests/aie/common/scripts/fir_helper.mk ssr_zip HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR SPLIT_ZIP_FILE=$(REF_LOC_OUTPUT_FILE_X86) TAG=$(TAG)\")",
                "$(if $(filter-out REF,$(TAG)), grep -ve '[XT]' ./x86simulator_output/data/uut_output.txt > ./logs/uut_output.txt)",
                "$(if $(filter REF,$(TAG)), grep -ve '[XT]' ./x86simulator_output/data/ref_output.txt > ./logs/ref_output.txt)",
                "$(if $(filter-out REF,$(TAG)), tclsh LIB_DIR/L2/tests/aie/common/scripts/diff.tcl ./logs/uut_output.txt ./logs/ref_output.txt ./logs/diff.txt $(DIFF_TOLERANCE) $(CC_TOLERANCE))",
                "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f LIB_DIR/L2/tests/aie/common/scripts/fir_helper.mk get_status HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL)\")",
                "$(if $(filter-out REF,$(TAG)), tclsh LIB_DIR/L2/tests/aie/common/scripts/diff_exit.tcl ./)"
            ]
        }
    ],
    "launch": [
        {
            "name": "aiesim-launch",
            "target": "aiesim",
            "sim_options": "--graph-latency"
        },
        {
            "name": "x86sim-launch",
            "target": "x86sim",
            "sim_options": ""
        }
    ],
    "aiecompiler": {
        "compiler": {
            "includepaths": [
                "LIB_DIR/L1/include/aie",
                "LIB_DIR/L1/src/aie",
                "LIB_DIR/L1/tests/aie/inc",
                "LIB_DIR/L1/tests/aie/src",
                "LIB_DIR/L2/include/aie",
                "LIB_DIR/L2/tests/aie/common/inc",
                "./"
            ],
            "customized_params": {
                "params": "--aie.verbose $($(TAG)_TARGET_COMPILE_ARGS) $($(TAG)_PREPROC_ARGS)",
                "default": {
                    "TAG": "UUT",
                    "UUT_KERNEL":"fir_decimate_hb",
                    "REF_KERNEL": "fir_decimate_hb_ref",
                    "UUT_GRAPH": "fir_decimate_hb_graph",
                    "REF_GRAPH": "fir_decimate_hb_ref_graph",
                    "SYMMETRY_FACTOR": "2",
                    "DIFF_TOLERANCE": "0",
                    "CC_TOLERANCE": "0",
                    "LOC_OUTPUT_FILE_X86": "./x86simulator_output/data/uut_output.txt",
                    "REF_LOC_OUTPUT_FILE_X86": "./x86simulator_output/data/ref_output.txt",
                    "LOC_OUTPUT_FILE_HW": "./aiesimulator_output/data/uut_output.txt",
                    "UUT_SIM_FILE": "./data/uut_output.txt",
                    "REF_SIM_FILE": "./data/ref_output.txt",
                    "LOC_COEFF_FILE": "./data/coeff.txt",
                    "LOC_INPUT_FILE": "./data/input.txt",
                    "REF_INPUT_FILE": "./data/input_ref.txt",
                    "MAX_FIR_PER_KERNEL": "256",
                    "REF_TARGET_COMPILE_ARGS": "",
                    "PREPROC_ARGS": "--aie.Xpreproc=-DCOEFF_FILE=$(LOC_COEFF_FILE)",
                    "REF_PREPROC_ARGS": "--aie.Xpreproc=-DUUT_GRAPH=$(REF_GRAPH) --aie.Xpreproc=-DINPUT_FILE=$(REF_INPUT_FILE) --aie.Xpreproc=-DOUTPUT_FILE=$(REF_SIM_FILE) $(PREPROC_ARGS)",
                    "UUT_PREPROC_ARGS": "--aie.Xpreproc=-DUUT_GRAPH=$(UUT_GRAPH) --aie.Xpreproc=-DINPUT_FILE=$(LOC_INPUT_FILE) --aie.Xpreproc=-DOUTPUT_FILE=$(UUT_SIM_FILE) $(PREPROC_ARGS) --aie.Xpreproc=-DUSING_UUT=1"
                }
            }
        }
    },
    "aiecontainers": [
        {
            "accelerators": [
                {
                    "location": "LIB_DIR/L2/tests/aie/fir_decimate_hb/test.cpp",
                    "files": [
                        "LIB_DIR/L1/src/aie/fir_decimate_hb.cpp",
                        "uut_config.h"
                    ],
                    "pl-freq": 1000,
                    "workdir": "./Work",
                    "options": "",
                    "name": "libadf.a"
                }
            ]
        }
    ],
    "generators": {
        "uut_config.h": {"file": "LIB_DIR/L2/tests/aie/common/scripts/tb_gen.py","function": "generate_testbench"}
    },
    "parameter_file": "multi_params.json",
    "testinfo": {
        "disable": false,
        "jobs": [
            {
                "index": 0,
                "dependency": [],
                "env": "",
                "cmd": "",
                "max_memory_MB": 40960,
                "max_time_min": {
                    "vitis_aie_x86sim": 120,
                    "vitis_aie_sim": 470
                }
            }
        ],
        "targets": [
            "vitis_aie_sim",
            "vitis_aie_x86sim"
        ],
        "category": "canary"
    }
}
