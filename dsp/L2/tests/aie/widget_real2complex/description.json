{
    "name": "Xilinx DSPLIB widget real2complex",
    "description": "",
    "gui": false,
    "flow": "versal",
    "platform_allowlist": [
        "vck190"
    ],
    "platform_properties": {
        "vck190": {
            "v++": {
                "compiler": {
                    "clflags": []
                },
                "linker": {
                    "ldclflags": [
                        "--config PROJECT/system.cfg"
                    ]
                }
            }
        }
    },
    "pre_build": [
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"tclsh LIB_DIR/L2/tests/aie/common/scripts/get_common_config_json.tcl ./config.json ./ $(UUT_KERNEL)\"  --connector \" \" --var \"DATA_TYPE:DATA_OUT_TYPE:WINDOW_VSIZE:AIE_VARIANT\")"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), vitis --classic -exec ipmetadata_config_checker LIB_DIR/L2/meta/$(UUT_KERNEL).json ./config.json -newflow)"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f helper.mk gen_input HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR INPUT_FILE=$(LOC_INPUT_FILE)\")"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f helper.mk ssr_split HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR INPUT_FILE=$(LOC_INPUT_FILE)\")"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), make run TARGET=x86sim TAG=REF)"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), make cleanall)"
        }
    ],
    "post_launch": [
        {
            "target": "aiesim",
            "launch_cmd": [
                "mkdir -p logs",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f helper.mk ssr_zip HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR SPLIT_ZIP_FILE=./aiesimulator_output/data/uut_output.txt\"",
                "grep -ve '[XT]' ./aiesimulator_output/data/uut_output.txt > ./logs/uut_output.txt",
                "tclsh LIB_DIR/L2/tests/aie/common/scripts/diff.tcl ./logs/uut_output.txt ./logs/ref_output.txt ./logs/diff.txt $(DIFF_TOLERANCE) $(CC_TOLERANCE)",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f helper.mk get_status HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL)\"",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f helper.mk get_latency HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR\"",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f helper.mk get_stats HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR\"",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f helper.mk get_theoretical_min HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL) \"",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f helper.mk harvest_mem HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR\"",
                "tclsh LIB_DIR/L2/tests/aie/common/scripts/diff_exit.tcl ./"
            ]
        },
        {
            "target": "x86sim",
            "launch_cmd": [
                "mkdir -p logs",
                "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f helper.mk ssr_zip HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR SPLIT_ZIP_FILE=./x86simulator_output/data/uut_output.txt\")",
                "$(if $(filter REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f helper.mk ssr_zip HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR SPLIT_ZIP_FILE=./x86simulator_output/data/ref_output.txt\")",
                "$(if $(filter-out REF,$(TAG)), grep -ve '[XT]' ./x86simulator_output/data/uut_output.txt > ./logs/uut_output.txt)",
                "$(if $(filter REF,$(TAG)), grep -ve '[XT]' ./x86simulator_output/data/ref_output.txt > ./logs/ref_output.txt)",
                "$(if $(filter-out REF,$(TAG)), tclsh LIB_DIR/L2/tests/aie/common/scripts/diff.tcl ./logs/uut_output.txt ./logs/ref_output.txt ./logs/diff.txt $(DIFF_TOLERANCE) $(CC_TOLERANCE))",
                "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file multi_params.json --instance_name $(PARAMS) --command \"make -f helper.mk get_status HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL)\")",
                "$(if $(filter-out REF,$(TAG)), tclsh LIB_DIR/L2/tests/aie/common/scripts/diff_exit.tcl ./)"
            ]
        }
    ],
    "launch": [
        {
            "name": "aiesim-launch",
            "target": "aiesim",
            "sim_options": "--graph-latency"
        },
        {
            "name": "x86sim-launch",
            "target": "x86sim",
            "sim_options": ""
        }
    ],
    "aiecompiler": {
        "compiler": {
            "includepaths": [
                "LIB_DIR/L1/include/aie",
                "LIB_DIR/L1/src/aie",
                "LIB_DIR/L1/tests/aie/inc",
                "LIB_DIR/L1/tests/aie/src",
                "LIB_DIR/L2/include/aie",
                "LIB_DIR/L2/tests/aie/common/inc",
                "./"
            ],
            "customized_params": {
                "params": "--aie.verbose $($(TAG)_TARGET_COMPILE_ARGS) $(TAG_PREPROC_ARGS)",
                "default": {
                    "TAG": "UUT",
                    "UUT_KERNEL":"widget_real2complex",
                    "REF_KERNEL": "widget_real2complex_ref",
                    "UUT_GRAPH": "widget_real2complex_graph",
                    "REF_GRAPH": "widget_real2complex_ref_graph",
                    "DIFF_TOLERANCE": "0",
                    "CC_TOLERANCE": "0",
                    "DATA_SEED": "1",
                    "DATA_STIM_TYPE": "0",
                    "LOC_INPUT_FILE": "./data/input.txt",
                    "UUT_SIM_FILE": "./data/uut_output.txt",
                    "REF_SIM_FILE": "./data/ref_output.txt",
                    "UUT_TARGET_COMPILE_ARGS": "--aie.Xchess=llvm.xargs=\"-std=c++2a\" --aie.Xchess=main:backend.mist2.xargs=\"+NOdra\"  --aie.Xchess=main:backend.mist2.pnll=\"off\" ",
                    "REF_TARGET_COMPILE_ARGS": "",
                    "PREPROC_ARGS": "--aie.Xpreproc=-DINPUT_FILE=$(LOC_INPUT_FILE)",
                    "USING_REF": "",
                    "USING_UUT": "--aie.Xpreproc=-DUSING_UUT=1",
                    "TAG_PREPROC_ARGS": "--aie.Xpreproc=-DUUT_GRAPH=$($(TAG)_GRAPH) --aie.Xpreproc=-DOUTPUT_FILE=$($(TAG)_SIM_FILE) $(PREPROC_ARGS) $(USING_$(TAG))"
                }
            }
        }
    },
    "generators": {
        "uut_config.h": {"file": "LIB_DIR/L2/tests/aie/common/scripts/tb_gen.py","function": "generate_testbench"}
    },
    "aiecontainers": [
        {
            "accelerators": [
                {
                    "location": "LIB_DIR/L2/tests/aie/widget_real2complex/test.cpp",
                    "files": [
                        "uut_config.h",
                        "LIB_DIR/L1/src/aie/widget_real2complex.cpp"
                    ],
                    "pl-freq": 1000,
                    "workdir": "./Work",
                    "options": "",
                    "name": "libadf.a"
                }
            ]
        }
    ],
    "testinfo": {
        "disable": false,
        "jobs": [
            {
                "index": 0,
                "dependency": [],
                "env": "",
                "cmd": "",
                "max_memory_MB": 32768,
                "max_time_min": {
                    "vitis_aie_x86sim": 60,
                    "vitis_aie_sim": 200
                }
            }
        ],
        "customized_params": "multi_params.json",
        "targets": [
            "vitis_aie_sim",
            "vitis_aie_x86sim"
        ],
        "category": "canary"
    }
}
